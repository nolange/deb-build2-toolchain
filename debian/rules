#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(NUMJOBS)
endif

# see FEATURE AREAS in dpkg-buildflags(1)
export DEB_BUILD_MAINT_OPTIONS = hardening=+all qa=+bug
# see ENVIRONMENT in dpkg-buildflags(1)
# export DEB_CPPFLAGS_MAINT_APPEND = -DBUILD2_ATOMIC_NON_LOCK_FREE
export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

# include /usr/share/dpkg/default.mk
include $(addprefix /usr/share/dpkg/,buildflags.mk architecture.mk)
ifneq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
DO_CROSS := 1
CROSS_PREFIX := $(DEB_HOST_GNU_TYPE)-
CC=gcc
endif

BUILD_CPPFLAGS = -pthread -DBUILD2_ATOMIC_NON_LOCK_FREE
BUILD_LIBS = -latomic -pthread
HOST_CPPFLAGS = -pthread -DBUILD2_ATOMIC_NON_LOCK_FREE
HOST_LIBS = -latomic -pthread
BUILD2_VERBOSE = -v

BOOTSTRAP_PATH := _bstr
BOOTSTRAP_P1_EXE := $(BOOTSTRAP_PATH)/p1/build2/b-boot
BOOTSTRAP_P2_EXE := $(BOOTSTRAP_PATH)/p2/build2/b

# build2 tries to build/configure every directory and
# uses some defaults that will break building easily.
# adding 'build2/@build2/ libbutl/@libbutl/' restricts build2
# to those libraries.
BUILD2_TARGETS = build2/@build2/ libbutl/@libbutl/ libpkgconf/@libpkgconf/

%:
	dh $@ --parallel

# Bootstrap is always running on build system,
# distribution compiler flags are not important
$(BOOTSTRAP_P1_EXE):
	echo "Build bootstrap phase 1 with bootstrap.gmake"
	mkdir -p $(BOOTSTRAP_PATH)/p1
	cd $(BOOTSTRAP_PATH)/p1 && \
	  $(MAKE) $(if $(BUILD2_VERBOSE),,-s) -f $(abspath bootstrap.gmake) CXX=$(CXX) CPPFLAGS="$(BUILD_CPPFLAGS)" LIBS="$(BUILD_LIBS)"

bootstrap-p1: $(BOOTSTRAP_P1_EXE)

# skip compiling bootstrap builder by setting
# DEBUG_USE_BOOTSTRAP to a existing build2 executable
ifneq ($(DEBUG_USE_BOOTSTRAP),)
$(BOOTSTRAP_P2_EXE): $(DEBUG_USE_BOOTSTRAP)
	install -D $< $@
else
$(BOOTSTRAP_P2_EXE): $(BOOTSTRAP_P1_EXE)
	echo "Build bootstrap phase 2 with $<"
	mkdir -p $(dir $(BOOTSTRAP_P2_EXE))
	$(abspath $(BOOTSTRAP_P1_EXE)) $(BUILD2_TARGETS) config.cxx=$(CXX) config.c=$(CC) config.bin.lib=static \
	  config.cc.poptions="$(BUILD_CPPFLAGS)"  \
	  config.cc.loptions="$(BUILD_LIBS)"   \
	  $(BUILD2_VERBOSE) && \
	  mv build2/b $(BOOTSTRAP_P2_EXE)
	# remove any possible leftovers from the static build (paranoia mode)
	$(MAKE) -s -f debian/rules clean_object_files
endif

bootstrap-p2: $(BOOTSTRAP_P2_EXE)

override_dh_auto_configure: $(BOOTSTRAP_P2_EXE)
	# TODO: how to set sysroot for cross compile
	$(BOOTSTRAP_P2_EXE) 'configure($(BUILD2_TARGETS))'    \
	  config.cxx=$(CROSS_PREFIX)$(CXX)  \
	  config.c=$(CROSS_PREFIX)$(CC)     \
	  config.cc.poptions="$(CPPFLAGS) $(HOST_CPPFLAGS)"  \
	  config.cc.loptions="$(LDFLAGS) $(HOST_LIBS)"   \
	  config.c.coptions="$(CFLAGS)"     \
	  config.cxx.coptions="$(CXXFLAGS)" \
	  config.install.root=/usr \
	  config.install.lib=exec_root/lib/$(DEB_HOST_MULTIARCH) && \
	$(BOOTSTRAP_P2_EXE) 'configure(libpkgconf/@libpkgconf/)' \
	  config.bin.lib=static

override_dh_auto_build: $(BOOTSTRAP_P2_EXE)
	$(BOOTSTRAP_P2_EXE) $(BUILD2_TARGETS) $(BUILD2_VERBOSE)

override_dh_auto_install: $(BOOTSTRAP_P2_EXE)
	$(BOOTSTRAP_P2_EXE) config.install.chroot=$(abspath debian/tmp) 'install($(BUILD2_TARGETS))'

clean_object_files:
	rm -rf $(addprefix build2/,b b.d libb.u.a libb.u.a.d version.hxx version.hxx.d) $(addprefix libpkgconf/libpkgconf/,version.h)
	find build2 libbutl libpkgconf tests unit-tests \( -name '*.o' -o -name '*.o.d' -o -name '*.so.d' -o -name '*.o.ii' -o -name '*.a.d' -o -name '*.h.d' -o -name '*.hxx.d' \) -delete
	find tests libbutl/tests libpkgconf/tests \( -name 'driver' -o -name 'driver.d' \) -delete
	find build libbutl libpkgconf tests \( -name 'config.build' -o -name '*.shared.pc' -o -name '*.static.pc' -o -name '*.so' -o -name '*.a' \) -delete

override_dh_auto_clean: clean_object_files
	rm -rf $(BOOTSTRAP_PATH)

ifeq ($(DO_CROSS_WORKAROUND),1)
# dh_shlibdeps still has issues with cross compilation, searching libs in the host paths instead
override_dh_shlibdeps:
	dh_shlibdeps -- -l/usr/$(DEB_HOST_MULTIARCH)/lib -l$(pwd)/debian/libbutl/usr/lib/$(DEB_HOST_MULTIARCH)
endif

.PHONY: bootstrap-p1 bootstrap-p2 clean_object_files

