#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(NUMJOBS)
endif


# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed
# include /usr/share/dpkg/default.mk
include $(addprefix /usr/share/dpkg/,buildflags.mk architecture.mk)

BOOTSTRAP_PATH := _bstr
BOOTSTRAP_P1_EXE := $(BOOTSTRAP_PATH)/p1/build2/b-boot
BOOTSTRAP_P2_EXE := $(BOOTSTRAP_PATH)/p2/build2/b

# build2 tries to build/configure every directory and
# uses some defaults that will break building easily.
# adding 'build2/@build2/ libbutl/@libbutl/' restricts build2
# to those libraries.
BUILD2_TARGETS = build2/@build2/ libbutl/@libbutl/ libpkgconf/@libpkgconf/

%:
	dh $@ --parallel

$(BOOTSTRAP_P1_EXE):
	mkdir -p $(BOOTSTRAP_PATH)/p1
	cd $(BOOTSTRAP_PATH)/p1 && \
	  $(MAKE) -s -f $(abspath bootstrap.gmake) CXX=g++

bootstrap-p1: $(BOOTSTRAP_P1_EXE)

$(BOOTSTRAP_P2_EXE): $(BOOTSTRAP_P1_EXE)
	mkdir -p $(dir $(BOOTSTRAP_P2_EXE))
	$(abspath $(BOOTSTRAP_P1_EXE)) $(BUILD2_TARGETS) config.cxx=$(CXX) config.c=$(CC) config.bin.lib=static && \
	  mv build2/b $(BOOTSTRAP_P2_EXE)
	# remove any possible leftovers from the static build (paranoia mode)
	$(MAKE) -s -f debian/rules clean_object_files

bootstrap-p2: $(BOOTSTRAP_P2_EXE)

override_dh_auto_configure: $(BOOTSTRAP_P2_EXE)
	$(BOOTSTRAP_P2_EXE) 'configure($(BUILD2_TARGETS))'    \
	  config.cxx=$(CXX)                 \
	  config.c=$(CC)                    \
	  config.cc.poptions="$(CPPFLAGS)"  \
	  config.cc.loptions="$(LDFLAGS)"   \
	  config.c.coptions="$(CFLAGS)"     \
	  config.cxx.coptions="$(CXXFLAGS)" \
	  config.install.root=/usr \
	  config.install.lib=exec_root/lib/$(DEB_HOST_MULTIARCH) && \
	$(BOOTSTRAP_P2_EXE) 'configure(libpkgconf/@libpkgconf/)' \
	  config.bin.lib=static


override_dh_auto_build: $(BOOTSTRAP_P2_EXE)
	$(BOOTSTRAP_P2_EXE) $(BUILD2_TARGETS)

override_dh_auto_install: $(BOOTSTRAP_P2_EXE)
	$(BOOTSTRAP_P2_EXE) config.install.chroot=$(abspath debian/tmp) 'install($(BUILD2_TARGETS))'

clean_object_files:
	rm -rf $(addprefix build2/,b b.d libb.u.a libb.u.a.d version.hxx version.hxx.d) $(addprefix libpkgconf/libpkgconf/,version.h)
	find build2 libbutl libpkgconf tests unit-tests \( -name '*.o' -o -name '*.o.d' -o -name '*.so.d' -o -name '*.o.ii' -o -name '*.a.d' -o -name '*.h.d' -o -name '*.hxx.d' \) -delete
	find tests libbutl/tests libpkgconf/tests \( -name 'driver' -o -name 'driver.d' \) -delete
	find build libbutl libpkgconf tests \( -name 'config.build' -o -name '*.shared.pc' -o -name '*.static.pc' -o -name '*.so' -o -name '*.a' \) -delete

override_dh_auto_clean: clean_object_files
	rm -rf $(BOOTSTRAP_PATH)

.PHONY: bootstrap-p1 bootstrap-p2 clean_object_files

